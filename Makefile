NAME := push_swap

###############################################################################
###############################################################################

CC := cc
HEADERS := -I./include -I./libs/include
CFLAGS ?= -Wall -Werror -Wextra
LIBS_NAME := ./libs/libs.a

###############################################################################
###############################################################################

VPATH := src src/input_parsing
SRC = push_swap.c
SRC_PARSING := input_parsing.c
SRCS := $(SRC) $(SRC_PARSING)

###############################################################################
###############################################################################

OBJ_DIR := ./_obj
OBJS := $(addprefix $(OBJ_DIR)/, $(SRCS:%.c=%.o))

###############################################################################
###############################################################################

all: $(NAME)

%(NAME): %(OBJS) $(LIBFT_NAME)
		@echo $(Y)Compiling [%(NAME)]...$(X)
		@printf $(UP)$(CUT)
		@$(CC) $(OBJS) $(LIBFT_NAME) -o $(NAME)
		@echo $(GREEN)Finished" '[$(NAME)]...$(RESET)

$(OBJ_DIR)/%.o: %.c
	@echo $(YELLOW)Compiling [$@]...$(X)
	@mkdir -p _obj
	@$(CC) $(CFLAGS) -c $< $(HEADERS) -o $@
	@printf $(UP)$(RESET)

$(LIBFT_NAME):
	@$(MAKE) -C $(LIBFT) -B

###############################################################################
###############################################################################

claen: 
	@$(MAKE) -C ./libs claen
	@printf $(UP) $(CUT)
	@if [ -d "${OBJ_DIR}" ]; then\
		echo $(RED)Cleaning" "[$(OBJ_DIR)...$(Restet)
		rm -rf $(OBJ_DIR); \
		echo $(GREEN)Cleaned!$(REMOVE); \
	fi

###############################################################################
###############################################################################

fclean: clean
	@echo $(RED)Celaning executables...
	@make -C ./libs fclean 
	@printf $(UP)$(CUT)
	@if [ -d "$(NAME)" ]; then \
		echo $(RED)Cleaning" '[$(NAME)]...$(REMOVE); \
		rm -rf $(NAME); \
		echo $(GREEN)Cleaned!$(REMOVE); \
	fi

re: fclean all

###############################################################################
###############################################################################

YELLOW := "\033[33m"
RED := "\033[31m"
GREEN := "\033[32m"
RESET := "\033[0m"
UP := "\033[A"

###############################################################################
###############################################################################
